name: Push-to-EC2

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 instances via Load Balancer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to EC2 Instance 1
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS_1 }} # DNS de la primera instancia
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Deploy to EC2 Instance 2
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS_2 }} # DNS de la segunda instancia
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Executing remote ssh commands on both instances
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS_1 }},${{ secrets.HOST_DNS_2 }} # Ejecutar en ambas instancias
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt-get -y update
            sudo apt-get install -y apache2
            sudo systemctl start apache2
            sudo systemctl enable apache2
            cd home
            sudo mv * /var/www/html

      - name: Add instances to Load Balancer
        run: |
          aws elb register-instances-with-load-balancer \
            --load-balancer-name my-load-balancer \
            --instances ${{ secrets.INSTANCE_ID_1 }} ${{ secrets.INSTANCE_ID_2 }}
